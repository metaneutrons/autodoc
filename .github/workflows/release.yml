name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: false
        type: string
      use_gitversion:
        description: 'Use GitVersion for automatic versioning'
        required: false
        type: boolean
        default: false

env:
  CARGO_TERM_COLOR: always

jobs:
  version:
    name: Determine Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install GitVersion
      if: inputs.use_gitversion == true
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'
    
    - name: Determine Version with GitVersion
      if: inputs.use_gitversion == true
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
    
    - name: Set Version
      id: version
      run: |
        if [ "${{ inputs.use_gitversion }}" == "true" ]; then
          VERSION="${{ steps.gitversion.outputs.semVer }}"
          TAG="v$VERSION"
        elif [ -n "${{ inputs.version }}" ]; then
          TAG="${{ inputs.version }}"
          VERSION="${TAG#v}"
        else
          TAG="${GITHUB_REF#refs/tags/}"
          VERSION="${TAG#v}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        echo "Tag: $TAG"

  build:
    name: Build
    needs: version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: autodoc-linux-x64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: autodoc-windows-x64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: autodoc-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: autodoc-macos-arm64
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libfontconfig1-dev
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.target }}
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Prepare artifact
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          cp target/${{ matrix.target }}/release/autodoc.exe ${{ matrix.artifact }}
        else
          cp target/${{ matrix.target }}/release/autodoc ${{ matrix.artifact }}
        fi
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact }}
        path: ${{ matrix.artifact }}

  release:
    name: Create Release
    needs: [version, build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.version.outputs.tag }}
        name: AutoDoc ${{ needs.version.outputs.version }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          autodoc-linux-x64/autodoc-linux-x64
          autodoc-windows-x64.exe/autodoc-windows-x64.exe
          autodoc-macos-x64/autodoc-macos-x64
          autodoc-macos-arm64/autodoc-macos-arm64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
